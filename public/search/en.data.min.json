[{"id":0,"href":"/Programming/Algorithm/Algs4Princeton/Week1/UnionFind/DynamicConnectivty.html","title":"Dynamic Connectivity","parent":"Union Find","content":" 前提 目的 相關應用 連接的定義 演算法實作 Union-find data type (API) 目標：為了union-find 設計一個有效率的資料結構 Union-find implementation[1] 參考來源 前提 Giving N objects\n目的 寫出演算法來完成以下兩點\nUnion command: connect two objects Find/connected query: Is there a path connecting the two objects? 假設給定的物件為 0,1,2,3,4,5,6,7,8,9，在執行完以下的union命令後，\nUnion(4, 3) Union(3, 8) Union(6, 5) Union(9, 4) Union(2, 1) connected(0, 7) // no connected connected(8, 9) // connected union(5, 0) union(7, 2) connected(0, 7) union(1, 0) // connected connectivity 的狀況會如下圖\nDynamic connectivity example (ROBERT SEDGEWICK | KEVIN WAYNE on Algorithms in Java, 4th Edition) 相關應用 數位照片的Pixels 在同一個網路的電腦 社群網站的好友 連接的定義 Reflexive: p 跟 p 自己連接 Symmetric: 若p跟q連接，q也跟p連接 Transitive: 若p跟q連接，q跟r連接，則p跟r連接 物件如果連接可以想成他們是在同一個component裏面，因此就剛剛的例子，會有2個component set\n{0,1,2,5,6,7} {3,4,8,9} 演算法實作 Find query: 檢查兩個物件是不是在相同的components Union command: 將兩個物件所在的component取聯集 Union-find data type (API) 目標：為了union-find 設計一個有效率的資料結構 其中\nNumber of object N can be huge. Number of operation M can be huge. Find queries and union commands may be intermixed(交錯進行). API 設計如下\npublic class UF --- UF(int N) // initialize N sites with integer names (0 to N-1) void union(int p, int q) // add connection between p and q int find(int p) // component identifier for p (0 to N-1) boolean connected(int p, int q) // return true if p and q are in the same component int count // number of components Union-find implementation[1] public class UF { private int[] id; // access to component id (site indexed) private int count; // number of components public UF(int n) { // Initialize component id array count = N; id = new int[N]; for (int i = 0; i \u0026lt; N; i++) { id[i] = i; } } public int count() { return count; } public boolean connected(int p, int q) { return find[p] == find[q]; } public int find(int p) { return id[p]; } public void union(int p, int q) { // Put p and q into the same component. int pID = find(p); int qID = find(q); // Nothing to do if p and q are already in the same component. if (pID == qID) return; // Rename p’s component to q’s name. for (int i = 0; i \u0026lt; id.length; i++) { if (id[i] == pID) id[i] = qID; count--; } } public static void main(String[] args) { // Read number of sites. int n = StdIn.readInt(); // Initialize N components. UF uf = new UF(n); while (!StdIn.isEmpty()) { int p = StdIn.readInt(); // Read pair to connect. int q = StdIn.readInt(); // Ignore if connected. if (uf.find(p) == uf.find(q)) continue; // Combine components uf.union(p, q); // Print connections. StdOut.println(p + \u0026#34; \u0026#34; + q); } StdOut.println(uf.count() + \u0026#34; components\u0026#34;); } } 參考來源 [1] Algorithms, 4th Edition\n","description":"前提 目的 相關應用 連接的定義 演算法實作 Union-find data type (API) 目標：為了union-find 設計一個有效率的資料結構 Union-find implementation[1] 參考來源 前提 Giving N objects\n目的 寫出演算法來完成以下兩點\nUnion command: connect two objects Find/connected query: Is there a path connecting the two objects? 假設給定的物件為 0,1,2,3,4,5,6,7,8,9，在執行完以下的union命令後，\nUnion(4, 3) Union(3, 8) Union(6, 5) Union(9, 4) Union(2, 1) connected(0, 7) // no connected connected(8, 9) // connected union(5, 0) union(7, 2) connected(0, 7) union(1, 0) // connected connectivity 的狀況會如下圖\nDynamic connectivity example (ROBERT SEDGEWICK | KEVIN WAYNE on Algorithms in Java, 4th Edition) 相關應用 數位照片的Pixels 在同一個網路的電腦 社群網站的好友 連接的定義 Reflexive: p 跟 p 自己連接 Symmetric: 若p跟q連接，q也跟p連接 Transitive: 若p跟q連接，q跟r連接，則p跟r連接 物件如果連接可以想成他們是在同一個component裏面，因此就剛剛的例子，會有2個component set"},{"id":1,"href":"/Programming/Algorithm/Algs4Princeton/Week2/StackAndQueue/Stacks.html","title":"Stacks","parent":"Stack And Queue","content":"","description":""},{"id":2,"href":"/Programming/Algorithm/Algs4Princeton/Week1/UnionFind.html","title":"Union Find","parent":"Week 1","content":"","description":""},{"id":3,"href":"/Programming/Algorithm/Algs4Princeton/Week1.html","title":"Week 1","parent":"Princeton Algorithms","content":"","description":""},{"id":4,"href":"/Programming/SiteStory/WhyHugo.html","title":"Why Hugo","parent":"Site Story","content":"\n為啥我搞了半天最後決定用 Hugo弄個網站？\n錯綜複雜的原因 斷斷續續的筆記習慣 VPS Domain 為了讓Domain的錢花得心安 Hugo 錯綜複雜的原因 會用Hugo架網站完全就是個意外，或許可以說是不同時間點覺得有趣的東西結合起來的結果。\n斷斷續續的筆記習慣 在轉職成為軟體工程師前，就有在記錄我最近學了什麼東西的習慣，原本是記在HackMD，但上班後就棄用了， 上班後用的東西就記在Apple Notes上，比較偏各專案得紀錄跟常用的指令。前陣子也有用過一陣子medium寫過幾篇刷題紀錄， 真的是幾篇就四篇吧 (而且都是複製別人的解法用自己的話重講一次，還都是easy)。\nVPS 跟Billy大神閒聊的時候知道他最近考過了AWS證照，夢想成為離前端越遠越好的軟體工程師的我很羨慕又欽佩，便在1 on 1的時候與主管聊起這話題，在主管的推薦下建議我可以先玩玩VPS，比起AWS單純也便宜，原理也都差不多，熟悉之後去用AWS會比較快上手因為AWS實在太雜了。\n然後我就馬上開了一開VPS起來然後發現我不知道要幹嘛\u0026hellip; 就又關掉了。\nDomain 做某專案的時候要請客戶提供Domain讓我們設定，或是我們幫他們弄一組，但我一開始完全不知道這些東西如何去用專業術語溝通，就問了旁邊的同事，發現他熟的跟啥一樣，我跟他比起來大概是全熟的牛排VS旁邊的生菜。\n後來知道他有在架NAS，也有買自己的Domain，還親手登入後台設定一遍給我看。聽到他有自己的domain我眼睛都亮起來了，感覺超屌，心想我一定也要一個自己的Domain。\n為了讓Domain的錢花得心安 接著好一陣子我每天朝思暮想要買一個domain，也去Godaddy上面瞎晃，不過畢竟 我也不是啥有錢人，買domain一定要物盡其用，只能為了說服我自己買domain而努力找出一個用途來，最好還要對我的職業生涯很有幫助。\n最後想著想著突然想到我可以用WordPress弄個blog來寫學習筆記，綁上我的domain！咦～聽起來不錯，便開始利用通勤時研究WordPress怎麼弄。\nHugo WordPress研究了半天，也不時看到其他架靜態blog的工具，發現這東西真是五花八門，馬上就又稍微研究了一下 (真的只有稍微)。\nJekyll：Ruby寫的，沒什麼感覺 Hugo：Go寫的，好像很潮 Hexo：Node.js寫的，直接刪掉 刪掉了Jekyll跟Hexo最後在wordpress跟Hugo選一個，一開始還是有點猶豫不決，最後壓垮我的倒數第二根稻草是看到一篇 Hugo+Github Action 自動部署到 VPS 的文章， 心裡想哇靠這不是把我的三個願望一次完成了嗎？還多點了一滴滴CI/CD。\n最後一根稻草是也去看了一下技術名人的網站，看到 良葛格的新網站 也是用Hugo架的，整個簡潔又專業。\n因此最後，就決定是Hugo了\n","description":"為啥我搞了半天最後決定用 Hugo弄個網站？\n錯綜複雜的原因 斷斷續續的筆記習慣 VPS Domain 為了讓Domain的錢花得心安 Hugo 錯綜複雜的原因 會用Hugo架網站完全就是個意外，或許可以說是不同時間點覺得有趣的東西結合起來的結果。\n斷斷續續的筆記習慣 在轉職成為軟體工程師前，就有在記錄我最近學了什麼東西的習慣，原本是記在HackMD，但上班後就棄用了， 上班後用的東西就記在Apple Notes上，比較偏各專案得紀錄跟常用的指令。前陣子也有用過一陣子medium寫過幾篇刷題紀錄， 真的是幾篇就四篇吧 (而且都是複製別人的解法用自己的話重講一次，還都是easy)。\nVPS 跟Billy大神閒聊的時候知道他最近考過了AWS證照，夢想成為離前端越遠越好的軟體工程師的我很羨慕又欽佩，便在1 on 1的時候與主管聊起這話題，在主管的推薦下建議我可以先玩玩VPS，比起AWS單純也便宜，原理也都差不多，熟悉之後去用AWS會比較快上手因為AWS實在太雜了。\n然後我就馬上開了一開VPS起來然後發現我不知道要幹嘛\u0026hellip; 就又關掉了。\nDomain 做某專案的時候要請客戶提供Domain讓我們設定，或是我們幫他們弄一組，但我一開始完全不知道這些東西如何去用專業術語溝通，就問了旁邊的同事，發現他熟的跟啥一樣，我跟他比起來大概是全熟的牛排VS旁邊的生菜。\n後來知道他有在架NAS，也有買自己的Domain，還親手登入後台設定一遍給我看。聽到他有自己的domain我眼睛都亮起來了，感覺超屌，心想我一定也要一個自己的Domain。\n為了讓Domain的錢花得心安 接著好一陣子我每天朝思暮想要買一個domain，也去Godaddy上面瞎晃，不過畢竟 我也不是啥有錢人，買domain一定要物盡其用，只能為了說服我自己買domain而努力找出一個用途來，最好還要對我的職業生涯很有幫助。\n最後想著想著突然想到我可以用WordPress弄個blog來寫學習筆記，綁上我的domain！咦～聽起來不錯，便開始利用通勤時研究WordPress怎麼弄。\nHugo WordPress研究了半天，也不時看到其他架靜態blog的工具，發現這東西真是五花八門，馬上就又稍微研究了一下 (真的只有稍微)。\nJekyll：Ruby寫的，沒什麼感覺 Hugo：Go寫的，好像很潮 Hexo：Node.js寫的，直接刪掉 刪掉了Jekyll跟Hexo最後在wordpress跟Hugo選一個，一開始還是有點猶豫不決，最後壓垮我的倒數第二根稻草是看到一篇 Hugo+Github Action 自動部署到 VPS 的文章， 心裡想哇靠這不是把我的三個願望一次完成了嗎？還多點了一滴滴CI/CD。\n最後一根稻草是也去看了一下技術名人的網站，看到 良葛格的新網站 也是用Hugo架的，整個簡潔又專業。\n因此最後，就決定是Hugo了"},{"id":5,"href":"/Programming/Algorithm/Blind75/Array/TwoSum.html","title":"Two Sum","parent":"Array","content":"My two sum solution\n","description":"My two sum solution"},{"id":6,"href":"/Programming/Algorithm/Algs4Princeton/Week1/AnalysisOfAlgorithm.html","title":"Analysis Of Algorithm","parent":"Week 1","content":" Mathematical Models ","description":" Mathematical Models "},{"id":7,"href":"/Programming/Algorithm/Algs4Princeton/Week2/StackAndQueue/ResizingArrays.html","title":"Resizing Arrays","parent":"Stack And Queue","content":"","description":""},{"id":8,"href":"/Programming/Algorithm/Algs4Princeton/Week1/UnionFind/QuickFind.html","title":"Union Find","parent":"Union Find","content":"","description":""},{"id":9,"href":"/Programming/Algorithm/Algs4Princeton/Week2.html","title":"Week 2","parent":"Princeton Algorithms","content":"","description":""},{"id":10,"href":"/Programming/SiteStory/GettingStart.html","title":"Hugo GitHub Page","parent":"Site Story","content":"離安裝好Hugo並胡搞瞎搞也過了大概一週，用我僅存的記憶記錄一下，前面都是湊字數的，重點是最後一段哈哈\n安裝Hugo 主題安裝 Github Page 抓不到css 安裝Hugo 因為我是Mac，所以直接用 brew intstall hugo安裝。\n安裝好之後就可以用 hugo new site blog-test來建立新的網站。\n主題安裝 安裝好Hugo之後，下一步就是挑選主題，我是使用 geekdoc 這個主題，主要是看到他的example site覺得很簡單，剛好我也不想花太多時間在把我的頁面弄的很fancy\n安裝的方法是直接下載他們的release bundle\n// 在themes的folder下面建立hugo-geekdoc的folder mkdir -p themes/hugo-geekdoc/ // 下載 curl -L https://github.com/thegeeklab/hugo-geekdoc/releases/latest/download/hugo-geekdoc.tar.gz | tar -xz -C themes/hugo-geekdoc/ --strip-components=1 安裝好之後再到Hugo的設定檔中把主題設定上去\ntheme = \u0026#34;hugo-geekdoc\u0026#34; 然後啟動Hugo就可以看到預設的頁面了\nhugo server -D 雖然hugo server會自動重build頁面，但是我發現有時候更改檔案內容或是資料夾結構，會無法正確顯示，這時候還是手動重啟hugo server比較穩。 編輯一下就可以用\nhugo 生成靜態內容，會建立一個public的資料夾將你剛剛的文件都放進去。\n然後就可以把他推到github的repository拉\nGithub Page 抓不到css 其實前面的步驟網路上都一堆教學，唯一我遇到的問題就是部署到github page後，發現\n我的css一直跑掉，打開開發工具看一下發現抓不到我的css跟js等檔案。\n在stackoverflow上找了半天，發現是相對路徑的問題，最後在config.toml檔案上加上\nrelativeURLs= true 就解決了。\n","description":"離安裝好Hugo並胡搞瞎搞也過了大概一週，用我僅存的記憶記錄一下，前面都是湊字數的，重點是最後一段哈哈\n安裝Hugo 主題安裝 Github Page 抓不到css 安裝Hugo 因為我是Mac，所以直接用 brew intstall hugo安裝。\n安裝好之後就可以用 hugo new site blog-test來建立新的網站。\n主題安裝 安裝好Hugo之後，下一步就是挑選主題，我是使用 geekdoc 這個主題，主要是看到他的example site覺得很簡單，剛好我也不想花太多時間在把我的頁面弄的很fancy\n安裝的方法是直接下載他們的release bundle\n// 在themes的folder下面建立hugo-geekdoc的folder mkdir -p themes/hugo-geekdoc/ // 下載 curl -L https://github.com/thegeeklab/hugo-geekdoc/releases/latest/download/hugo-geekdoc.tar.gz | tar -xz -C themes/hugo-geekdoc/ --strip-components=1 安裝好之後再到Hugo的設定檔中把主題設定上去\ntheme = \u0026#34;hugo-geekdoc\u0026#34; 然後啟動Hugo就可以看到預設的頁面了\nhugo server -D 雖然hugo server會自動重build頁面，但是我發現有時候更改檔案內容或是資料夾結構，會無法正確顯示，這時候還是手動重啟hugo server比較穩。 編輯一下就可以用\nhugo 生成靜態內容，會建立一個public的資料夾將你剛剛的文件都放進去。\n然後就可以把他推到github的repository拉\nGithub Page 抓不到css 其實前面的步驟網路上都一堆教學，唯一我遇到的問題就是部署到github page後，發現\n我的css一直跑掉，打開開發工具看一下發現抓不到我的css跟js等檔案。\n在stackoverflow上找了半天，發現是相對路徑的問題，最後在config.toml檔案上加上\nrelativeURLs= true 就解決了。"},{"id":11,"href":"/Programming/Algorithm/Blind75/Array/BestTimeToBuyAndSellStock.html","title":"Best Time to Buy and Sell Stock","parent":"Array","content":"my solution\n","description":"my solution"},{"id":12,"href":"/Programming/SiteStory/GitHubActionWithVPS.html","title":"GitHub Action w/ VPS","parent":"Site Story","content":"","description":""},{"id":13,"href":"/Programming/SiteStory/SSL.html","title":"Install SSL","parent":"Site Story","content":"Domain 是在 namecheap 買的，設定好A紀錄跟CNAME之後就可以用了，再來就是申請SSL憑證 糊裡糊塗就把SSL弄好了，隨手記錄一下印象比較深刻的步驟跟坑。\n領取SSL憑證 收到憑證後 nginx設定 nginx -t 通過但是一直重啟不了nginx 領取SSL憑證 生成私鑰： openssl genrsa -out private.key 2048 生成一個2048位的RSA私鑰，並將其保存在名為 private.key 的文件中。\n接著用剛剛的私鑰生成CSR（證書簽署請求）\nopenssl req -new -key private.key -out csr.csr 會要求提供與SSL證書相關的信息，例如域名、組織名稱、所在地等。請根據提示輸入正確的信息。\nCommon Name (CN)：這邊要填你的域名 domain.com，它後面本來寫說填個名字就好我就傻傻的填我的英文名字，結果一直失敗..\n生成的CSR文件 csr.csr 就可以整個複製上去。 收到憑證後 通常在取得 SSL 憑證時，您會收到兩個檔案：.crt 憑證檔案和 .ca-bundle（或 .bundle）憑證束檔案。\n.crt 憑證檔案是您的 SSL 證書，它包含您的網站的公開金鑰以及其他相關的證書資訊。\n.ca-bundle（或 .bundle）憑證束檔案是根憑證和中繼憑證的集合。它包含了憑證鏈中的所有憑證，用於驗證您的 SSL 憑證的合法性。憑證鏈包括根憑證（Root Certificate）和中繼憑證（Intermediate Certificate）。根憑證是由受信任的憑證授權中心（Certificate Authority）簽署的，而中繼憑證是由根憑證簽署的其他憑證。\n在設定 Nginx 的 SSL 時，需要將 .crt 憑證檔案和 .ca-bundle（或 .bundle）憑證束檔案合併為一個檔案，形成完整的憑證鏈。\n順序不能錯，要先crt再ca-bundle\ncat domain.crt domain.ca-bundle \u0026gt; server.crt nginx設定 # HTTP 重定向到 HTTPS server { listen 80; server_name lazyvic.com; return 301 https://lazyvic.com$request_uri; # 返回 301 重定向到相應的 HTTPS URL } # HTTPS 配置 server { listen 443 ssl; # 監聽 443 端口，啟用 SSL server_name lazyvic.com; ssl_certificate /etc/nginx/ssl/server.crt; # SSL 憑證路徑 ssl_certificate_key /etc/nginx/ssl/private.key; # SSL 憑證私鑰路徑 location / { root /var/www/html/public; # 根目錄，用於存放網站文件 index index.html index.htm; # 默認索引文件 } # 自定義 404 頁面 error_page 404 /404.html; location = /404.html { # 這裡可以指定自定義的 404 頁面的路徑和檔名 } # 自定義 50x 錯誤頁面 error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; # 50x 錯誤頁面的路徑 } } nginx -t 通過但是一直重啟不了nginx 在重啟前有先用 nginx -t 確認無誤，但是重啟nginx卻一直失敗，看了log說是沒有權限取得檔案，查了一下解法如下：\nrestorecon -v -R /etc/nginx 查了一下這個restorecon到底是啥東西\nrestorecon 指令用於恢復檔案和目錄的 SELinux 安全上下文。在某些 Linux 發行版中，如 CentOS 和 RHEL，安全上下文是用於控制檔案和目錄的存取權限和 SELinux 政策的一部分。\n當您遭遇 Nginx SSL 憑證無法載入的問題時，有時是由於 SELinux 安全上下文不正確導致的。透過執行 restorecon 指令，您可以將 /etc/nginx 目錄及其內部的檔案和目錄恢復為預設的 SELinux 安全上下文。\n這樣做可以確保 Nginx 服務以適當的安全上下文執行，並且具有正確的存取權限，從而能夠正確載入並使用 SSL 憑證。\n","description":"Domain 是在 namecheap 買的，設定好A紀錄跟CNAME之後就可以用了，再來就是申請SSL憑證 糊裡糊塗就把SSL弄好了，隨手記錄一下印象比較深刻的步驟跟坑。\n領取SSL憑證 收到憑證後 nginx設定 nginx -t 通過但是一直重啟不了nginx 領取SSL憑證 生成私鑰： openssl genrsa -out private.key 2048 生成一個2048位的RSA私鑰，並將其保存在名為 private.key 的文件中。\n接著用剛剛的私鑰生成CSR（證書簽署請求）\nopenssl req -new -key private.key -out csr.csr 會要求提供與SSL證書相關的信息，例如域名、組織名稱、所在地等。請根據提示輸入正確的信息。\nCommon Name (CN)：這邊要填你的域名 domain.com，它後面本來寫說填個名字就好我就傻傻的填我的英文名字，結果一直失敗..\n生成的CSR文件 csr.csr 就可以整個複製上去。 收到憑證後 通常在取得 SSL 憑證時，您會收到兩個檔案：.crt 憑證檔案和 .ca-bundle（或 .bundle）憑證束檔案。\n.crt 憑證檔案是您的 SSL 證書，它包含您的網站的公開金鑰以及其他相關的證書資訊。\n.ca-bundle（或 .bundle）憑證束檔案是根憑證和中繼憑證的集合。它包含了憑證鏈中的所有憑證，用於驗證您的 SSL 憑證的合法性。憑證鏈包括根憑證（Root Certificate）和中繼憑證（Intermediate Certificate）。根憑證是由受信任的憑證授權中心（Certificate Authority）簽署的，而中繼憑證是由根憑證簽署的其他憑證。\n在設定 Nginx 的 SSL 時，需要將 .crt 憑證檔案和 .ca-bundle（或 .bundle）憑證束檔案合併為一個檔案，形成完整的憑證鏈。\n順序不能錯，要先crt再ca-bundle\ncat domain.crt domain.ca-bundle \u0026gt; server.crt nginx設定 # HTTP 重定向到 HTTPS server { listen 80; server_name lazyvic."},{"id":14,"href":"/Programming/SiteStory/TyporaUpic.html","title":"Typora + Upic","parent":"Site Story","content":"Hugo是用MarkDown來編輯文件的，這時候有個好用的MarkDown 編輯器就很好用，最後我是選擇用Typroa來編輯文件，再貼到Hugo發布，會選擇Typora的原因是因為Typora支援自動上傳圖片並產生連結功能，非常適合Lazy的我。 簡單記錄一下如何用uPic自動上傳圖片到我的GitHub\nGitHub開一個新的Repo並產生token uPic 安裝uPic 配置 Typora設定 GitHub開一個新的Repo並產生token 在GitHub首頁-\u0026gt;setting-\u0026gt;Developer Setting-\u0026gt; Personal Ascess Token裡面產生一組新的Token。\n我是選classic的token，因為看到另一個還在beta。\n可以只勾public_repo，剩下我都沒勾，Note隨便打就好。\nuPic 安裝uPic brew install bigwig-club/brew/upic --cask 配置 安裝好之後打開uPic，是Mac的話會在最上面那一條出現，一開始沒注意到還一直想說怎麼打不開\u0026hellip;\n進入設定頁面\nOwner -\u0026gt; 你的github帳號 Repo -\u0026gt; 你的repo Token-\u0026gt; GitHub token 然後可以按下驗證聽說會有成功畫面出現，但我按了都沒反應就是了。最後是去Typora那邊測試可不可以成功\n設定好後再把uPic預設上傳方式改成GitHub即可\nTypora設定 照著設定按一下test Uploader顯示成功，之後圖片拖進來就會自動寫好Markdown嚕。\n","description":"Hugo是用MarkDown來編輯文件的，這時候有個好用的MarkDown 編輯器就很好用，最後我是選擇用Typroa來編輯文件，再貼到Hugo發布，會選擇Typora的原因是因為Typora支援自動上傳圖片並產生連結功能，非常適合Lazy的我。 簡單記錄一下如何用uPic自動上傳圖片到我的GitHub\nGitHub開一個新的Repo並產生token uPic 安裝uPic 配置 Typora設定 GitHub開一個新的Repo並產生token 在GitHub首頁-\u0026gt;setting-\u0026gt;Developer Setting-\u0026gt; Personal Ascess Token裡面產生一組新的Token。\n我是選classic的token，因為看到另一個還在beta。\n可以只勾public_repo，剩下我都沒勾，Note隨便打就好。\nuPic 安裝uPic brew install bigwig-club/brew/upic --cask 配置 安裝好之後打開uPic，是Mac的話會在最上面那一條出現，一開始沒注意到還一直想說怎麼打不開\u0026hellip;\n進入設定頁面\nOwner -\u0026gt; 你的github帳號 Repo -\u0026gt; 你的repo Token-\u0026gt; GitHub token 然後可以按下驗證聽說會有成功畫面出現，但我按了都沒反應就是了。最後是去Typora那邊測試可不可以成功\n設定好後再把uPic預設上傳方式改成GitHub即可\nTypora設定 照著設定按一下test Uploader顯示成功，之後圖片拖進來就會自動寫好Markdown嚕。"},{"id":15,"href":"/Programming/SiteStory.html","title":"Site Story","parent":"Programming","content":" Why Hugo Hugo GitHub Page GitHub Action w/ VPS Install SSL Typora \u0026#43; Upic ","description":" Why Hugo Hugo GitHub Page GitHub Action w/ VPS Install SSL Typora \u0026#43; Upic "},{"id":16,"href":"/Programming/Algorithm/Blind75.html","title":"Blind 75","parent":"Algorithm","content":" List of Blind 75 Array Two Sum Best Time to Buy and Sell Stock Level 1.3 Level 1.3.1 Tree Maximum Depth of Binary Tree Maximum Depth of Binary Tree ","description":" List of Blind 75 Array Two Sum Best Time to Buy and Sell Stock Level 1.3 Level 1.3.1 Tree Maximum Depth of Binary Tree Maximum Depth of Binary Tree "},{"id":17,"href":"/Programming/Algorithm/Grind75.html","title":"Grind 75","parent":"Algorithm","content":" Grind 75 Week1 Best Time to Buy and Sell Stock two sum Level 1.3 Level 1.3.1 Week2 Maximum Depth of Binary Tree Maximum Depth of Binary Tree ","description":" Grind 75 Week1 Best Time to Buy and Sell Stock two sum Level 1.3 Level 1.3.1 Week2 Maximum Depth of Binary Tree Maximum Depth of Binary Tree "},{"id":18,"href":"/Programming/Languages/Java.html","title":"JAVA","parent":"Language","content":"My Java 75 trip\u0026hellip;\nSpring Boot ","description":"My Java 75 trip\u0026hellip;\nSpring Boot "},{"id":19,"href":"/Programming/Languages/PHP.html","title":"PHP","parent":"Language","content":"My Java 75 trip\u0026hellip;\nPHP UNIT ","description":"My Java 75 trip\u0026hellip;\nPHP UNIT "},{"id":20,"href":"/Programming/Languages/PHP/PhpUnit.html","title":"PHP UNIT","parent":"PHP","content":"My leetcode blind 75 trip\u0026hellip;\nGetting Started With Spring Spring 2 Start Level 1.3 Level 1.3.1 Integrated Spring Integrate Spring 1 Integrate Spring 2 ","description":"My leetcode blind 75 trip\u0026hellip;\nGetting Started With Spring Spring 2 Start Level 1.3 Level 1.3.1 Integrated Spring Integrate Spring 1 Integrate Spring 2 "},{"id":21,"href":"/Programming/Languages/Java/Spring-Boot.html","title":"Spring Boot","parent":"JAVA","content":"My leetcode blind 75 trip\u0026hellip;\nGetting Started With Spring Spring 2 Start Level 1.3 Level 1.3.1 Integrated Spring Integrate Spring 1 Integrate Spring 2 ","description":"My leetcode blind 75 trip\u0026hellip;\nGetting Started With Spring Spring 2 Start Level 1.3 Level 1.3.1 Integrated Spring Integrate Spring 1 Integrate Spring 2 "},{"id":22,"href":"/Programming/Algorithm/Blind75/Array/test.html","title":"Level 1.3","parent":"Array","content":"Nested folder test\nLevel 1.3.1 ","description":"Nested folder test\nLevel 1.3.1 "},{"id":23,"href":"/Programming/Algorithm/Grind75/Week1/test.html","title":"Level 1.3","parent":"Week1","content":"Nested folder test\nLevel 1.3.1 ","description":"Nested folder test\nLevel 1.3.1 "},{"id":24,"href":"/Programming/Languages/Java/Spring-Boot/Getting-started-with-Spring/test.html","title":"Level 1.3","parent":"Getting Started With Spring","content":"Nested folder test\nLevel 1.3.1 ","description":"Nested folder test\nLevel 1.3.1 "},{"id":25,"href":"/Programming/Languages/PHP/PhpUnit/Getting-started-with-Spring/test.html","title":"Level 1.3","parent":"Getting Started With Spring","content":"Nested folder test\nLevel 1.3.1 ","description":"Nested folder test\nLevel 1.3.1 "},{"id":26,"href":"/Programming/Algorithm/Blind75/Array/test/two-sum.html","title":"Level 1.3.1","parent":"Level 1.3","content":"Level 1.3.1\n","description":"Level 1.3.1"},{"id":27,"href":"/Programming/Algorithm/Grind75/Week1/test/two-sum.html","title":"Level 1.3.1","parent":"Level 1.3","content":"Level 1.3.1\n","description":"Level 1.3.1"},{"id":28,"href":"/Programming/Languages/Java/Spring-Boot/Getting-started-with-Spring/test/two-sum.html","title":"Level 1.3.1","parent":"Level 1.3","content":"Level 1.3.1\n","description":"Level 1.3.1"},{"id":29,"href":"/Programming/Languages/PHP/PhpUnit/Getting-started-with-Spring/test/two-sum.html","title":"Level 1.3.1","parent":"Level 1.3","content":"Level 1.3.1\n","description":"Level 1.3.1"},{"id":30,"href":"/","title":"","parent":"","content":" Jottings Programming Algorithm Language Site Story Why Hugo Hugo GitHub Page GitHub Action w/ VPS Install SSL Typora \u0026#43; Upic ","description":" Jottings Programming Algorithm Language Site Story Why Hugo Hugo GitHub Page GitHub Action w/ VPS Install SSL Typora \u0026#43; Upic "},{"id":31,"href":"/Programming/Algorithm.html","title":"Algorithm","parent":"Programming","content":" Princeton Algorithms Blind 75 Grind 75 ","description":" Princeton Algorithms Blind 75 Grind 75 "},{"id":32,"href":"/Programming/Algorithm/Algs4Princeton/Week1/AnalysisOfAlgorithm/MathematicalModels.html","title":"Mathematical Models","parent":"Analysis Of Algorithm","content":"","description":""},{"id":33,"href":"/Programming/Algorithm/Algs4Princeton/Week1/AnalysisOfAlgorithm/MathematicalModels/MathematicalModels.html","title":"Mathematical Models","parent":"Mathematical Models","content":"my solution\n","description":"my solution"},{"id":34,"href":"/Programming/Algorithm/Algs4Princeton.html","title":"Princeton Algorithms","parent":"Algorithm","content":" Week 1 Union Find Dynamic Connectivity Union Find Analysis Of Algorithm Week 2 Stack And Queue ","description":" Week 1 Union Find Dynamic Connectivity Union Find Analysis Of Algorithm Week 2 Stack And Queue "},{"id":35,"href":"/Programming.html","title":"Programming","parent":"","content":" Algorithm Language Site Story Why Hugo Hugo GitHub Page GitHub Action w/ VPS Install SSL Typora \u0026#43; Upic ","description":" Algorithm Language Site Story Why Hugo Hugo GitHub Page GitHub Action w/ VPS Install SSL Typora \u0026#43; Upic "},{"id":36,"href":"/Programming/Algorithm/Algs4Princeton/Week2/StackAndQueue/ResizingArrays/ResizingArrays.html","title":"Resizing Arrays","parent":"Resizing Arrays","content":"my solution\n","description":"my solution"},{"id":37,"href":"/Programming/Algorithm/Algs4Princeton/Week2/StackAndQueue.html","title":"Stack And Queue","parent":"Week 2","content":" Stacks Resizing Arrays ","description":" Stacks Resizing Arrays "},{"id":38,"href":"/Programming/Algorithm/Algs4Princeton/Week2/StackAndQueue/Stacks/UnionFind.html","title":"Stacks","parent":"Stacks","content":"my solution\n","description":"my solution"},{"id":39,"href":"/Programming/Algorithm/Algs4Princeton/Week1/UnionFind/QuickFind/UnionFind.html","title":"Union Find","parent":"Union Find","content":"my solution\n","description":"my solution"},{"id":40,"href":"/tags/hugo.html","title":"hugo","parent":"Tags","content":"","description":""},{"id":41,"href":"/tags.html","title":"Tags","parent":"","content":"","description":""},{"id":42,"href":"/tags/trash-talk.html","title":"trash talk","parent":"Tags","content":"","description":""},{"id":43,"href":"/Programming/Algorithm/Blind75/Array.html","title":"Array","parent":"Blind 75","content":"","description":""},{"id":44,"href":"/Programming/Algorithm/Blind75/Tree.html","title":"Tree","parent":"Blind 75","content":"","description":""},{"id":45,"href":"/Programming/Algorithm/Grind75/Week1.html","title":"Week1","parent":"Grind 75","content":"","description":""},{"id":46,"href":"/Programming/Algorithm/Grind75/Week2.html","title":"Week2","parent":"Grind 75","content":"","description":""},{"id":47,"href":"/Programming/Languages/Java/Spring-Boot/Getting-started-with-Spring.html","title":"Getting Started With Spring","parent":"Spring Boot","content":"","description":""},{"id":48,"href":"/Programming/Languages/Java/Spring-Boot/Integrated-Spring.html","title":"Integrated Spring","parent":"Spring Boot","content":"","description":""},{"id":49,"href":"/Programming/Languages/PHP/PhpUnit/Getting-started-with-Spring.html","title":"Getting Started With Spring","parent":"PHP UNIT","content":"","description":""},{"id":50,"href":"/Programming/Languages/PHP/PhpUnit/Integrated-Spring.html","title":"Integrated Spring","parent":"PHP UNIT","content":"","description":""},{"id":51,"href":"/Programming/Algorithm/Grind75/Week1/Best-Time-to-Buy-and-Sell-Stock.html","title":"Best Time to Buy and Sell Stock","parent":"Week1","content":"my solution\n","description":"my solution"},{"id":52,"href":"/tags/infra.html","title":"infra","parent":"Tags","content":"","description":""},{"id":53,"href":"/Programming/Languages/Java/Spring-Boot/Integrated-Spring/Integrate-Spirng-1.html","title":"Integrate Spring 1","parent":"Integrated Spring","content":"My same tree solution\n","description":"My same tree solution"},{"id":54,"href":"/Programming/Languages/PHP/PhpUnit/Integrated-Spring/Integrate-Spirng-1.html","title":"Integrate Spring 1","parent":"Integrated Spring","content":"My same tree solution\n","description":"My same tree solution"},{"id":55,"href":"/Programming/Languages/Java/Spring-Boot/Integrated-Spring/same-tree.html","title":"Integrate Spring 2","parent":"Integrated Spring","content":"my solution\n","description":"my solution"},{"id":56,"href":"/Programming/Languages/PHP/PhpUnit/Integrated-Spring/same-tree.html","title":"Integrate Spring 2","parent":"Integrated Spring","content":"my solution\n","description":"my solution"},{"id":57,"href":"/Programming/Languages.html","title":"Language","parent":"Programming","content":"My leetcode blind 75 trip\u0026hellip;\nJAVA PHP ","description":"My leetcode blind 75 trip\u0026hellip;\nJAVA PHP "},{"id":58,"href":"/tags/leetcode.html","title":"leetcode","parent":"Tags","content":"","description":""},{"id":59,"href":"/Programming/Algorithm/Blind75/Tree/MaximumDepthOfBinaryTree.html","title":"Maximum Depth of Binary Tree","parent":"Tree","content":"My same tree solution\n","description":"My same tree solution"},{"id":60,"href":"/Programming/Algorithm/Blind75/Tree/SameTree.html","title":"Maximum Depth of Binary Tree","parent":"Tree","content":"my solution\n","description":"my solution"},{"id":61,"href":"/Programming/Algorithm/Grind75/Week2/Maximum-Depth-of-Binary-Tree.html","title":"Maximum Depth of Binary Tree","parent":"Week2","content":"My same tree solution\n","description":"My same tree solution"},{"id":62,"href":"/Programming/Algorithm/Grind75/Week2/same-tree.html","title":"Maximum Depth of Binary Tree","parent":"Week2","content":"my solution\n","description":"my solution"},{"id":63,"href":"/Programming/Languages/Java/Spring-Boot/Getting-started-with-Spring/two-sum.html","title":"Spring 2","parent":"Getting Started With Spring","content":"asdf My two sum solution\n","description":"asdf My two sum solution"},{"id":64,"href":"/Programming/Languages/PHP/PhpUnit/Getting-started-with-Spring/two-sum.html","title":"Spring 2","parent":"Getting Started With Spring","content":"asdf My two sum solution\n","description":"asdf My two sum solution"},{"id":65,"href":"/Programming/Languages/Java/Spring-Boot/Getting-started-with-Spring/Start.html","title":"Start","parent":"Getting Started With Spring","content":"my solution\n","description":"my solution"},{"id":66,"href":"/Programming/Languages/PHP/PhpUnit/Getting-started-with-Spring/Start.html","title":"Start","parent":"Getting Started With Spring","content":"my solution\n","description":"my solution"},{"id":67,"href":"/Programming/Algorithm/Grind75/Week1/two-sum.html","title":"two sum","parent":"Week1","content":"My two sum solution\n","description":"My two sum solution"}]