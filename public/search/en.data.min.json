[{"id":0,"href":"/Blogs/Java/test1.html","title":"2-1","parent":"Java","content":"","description":""},{"id":1,"href":"/Blogs/LeetCode/test1.html","title":"2-1","parent":"Leetcode","content":"","description":""},{"id":2,"href":"/Blogs/PHP/test1.html","title":"2-1","parent":"PHP","content":"","description":""},{"id":3,"href":"/Blogs/Java/test2.html","title":"2-2","parent":"Java","content":"","description":""},{"id":4,"href":"/Blogs/LeetCode/test2.html","title":"2-2","parent":"Leetcode","content":"","description":""},{"id":5,"href":"/Blogs/PHP/test2.html","title":"2-2","parent":"PHP","content":"","description":""},{"id":6,"href":"/Blogs.html","title":"Code","parent":"Welcome to My Blog","content":" Hugo GitHub Action/ VPS Install SSL Java 2-1 2-2 Leetcode 2-1 2-2 PHP 2-1 2-2 ","description":" Hugo GitHub Action/ VPS Install SSL Java 2-1 2-2 Leetcode 2-1 2-2 PHP 2-1 2-2 "},{"id":7,"href":"/Blogs/Hugo/test2.html","title":"GitHub Action/ VPS","parent":"Hugo","content":"","description":""},{"id":8,"href":"/Blogs/Hugo.html","title":"Hugo","parent":"Code","content":" GitHub Action/ VPS Install SSL ","description":" GitHub Action/ VPS Install SSL "},{"id":9,"href":"/Blogs/Hugo/SSL.html","title":"Install SSL","parent":"Hugo","content":"Domain 是在 namespace 買的，設定好A紀錄跟CNAME之後就可以用了，再來就是申請SSL憑證 糊裡糊塗就把SSL弄好了，隨手記錄一下印象比較深刻的步驟跟坑。\n領取SSL憑證 收到憑證後 nginx設定 nginx -t 通過但是一直重啟不了nginx 領取SSL憑證 生成私鑰： openssl genrsa -out private.key 2048 生成一個2048位的RSA私鑰，並將其保存在名為 private.key 的文件中。\n接著用剛剛的私鑰生成CSR（證書簽署請求）\nopenssl req -new -key private.key -out csr.csr 會要求提供與SSL證書相關的信息，例如域名、組織名稱、所在地等。請根據提示輸入正確的信息。\nCommon Name (CN)：這邊要填你的域名 domain.com，它後面本來寫說填個名字就好我就傻傻的填我的英文名字，結果一直失敗..\n生成的CSR文件 csr.csr 就可以整個複製上去。 收到憑證後 通常在取得 SSL 憑證時，您會收到兩個檔案：.crt 憑證檔案和 .ca-bundle（或 .bundle）憑證束檔案。\n.crt 憑證檔案是您的 SSL 證書，它包含您的網站的公開金鑰以及其他相關的證書資訊。\n.ca-bundle（或 .bundle）憑證束檔案是根憑證和中繼憑證的集合。它包含了憑證鏈中的所有憑證，用於驗證您的 SSL 憑證的合法性。憑證鏈包括根憑證（Root Certificate）和中繼憑證（Intermediate Certificate）。根憑證是由受信任的憑證授權中心（Certificate Authority）簽署的，而中繼憑證是由根憑證簽署的其他憑證。\n在設定 Nginx 的 SSL 時，需要將 .crt 憑證檔案和 .ca-bundle（或 .bundle）憑證束檔案合併為一個檔案，形成完整的憑證鏈。\n順序不能錯，要先crt再ca-bundle\ncat domain.crt domain.ca-bundle \u0026gt; server.crt nginx設定 # HTTP 重定向到 HTTPS server { listen 80; server_name lazyvic.com; return 301 https://lazyvic.com$request_uri; # 返回 301 重定向到相應的 HTTPS URL } # HTTPS 配置 server { listen 443 ssl; # 監聽 443 端口，啟用 SSL server_name lazyvic.com; ssl_certificate /etc/nginx/ssl/server.crt; # SSL 憑證路徑 ssl_certificate_key /etc/nginx/ssl/private.key; # SSL 憑證私鑰路徑 location / { root /var/www/html/public; # 根目錄，用於存放網站文件 index index.html index.htm; # 默認索引文件 } # 自定義 404 頁面 error_page 404 /404.html; location = /404.html { # 這裡可以指定自定義的 404 頁面的路徑和檔名 } # 自定義 50x 錯誤頁面 error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; # 50x 錯誤頁面的路徑 } } nginx -t 通過但是一直重啟不了nginx 在重啟前有先用 nginx -t 確認無誤，但是重啟nginx卻一直失敗，看了log說是沒有權限取得檔案，查了一下解法如下：\nrestorecon -v -R /etc/nginx 查了一下這個restorecon到底是啥東西\nrestorecon 指令用於恢復檔案和目錄的 SELinux 安全上下文。在某些 Linux 發行版中，如 CentOS 和 RHEL，安全上下文是用於控制檔案和目錄的存取權限和 SELinux 政策的一部分。\n當您遭遇 Nginx SSL 憑證無法載入的問題時，有時是由於 SELinux 安全上下文不正確導致的。透過執行 restorecon 指令，您可以將 /etc/nginx 目錄及其內部的檔案和目錄恢復為預設的 SELinux 安全上下文。\n這樣做可以確保 Nginx 服務以適當的安全上下文執行，並且具有正確的存取權限，從而能夠正確載入並使用 SSL 憑證。\n","description":"Domain 是在 namespace 買的，設定好A紀錄跟CNAME之後就可以用了，再來就是申請SSL憑證 糊裡糊塗就把SSL弄好了，隨手記錄一下印象比較深刻的步驟跟坑。\n領取SSL憑證 收到憑證後 nginx設定 nginx -t 通過但是一直重啟不了nginx 領取SSL憑證 生成私鑰： openssl genrsa -out private.key 2048 生成一個2048位的RSA私鑰，並將其保存在名為 private.key 的文件中。\n接著用剛剛的私鑰生成CSR（證書簽署請求）\nopenssl req -new -key private.key -out csr.csr 會要求提供與SSL證書相關的信息，例如域名、組織名稱、所在地等。請根據提示輸入正確的信息。\nCommon Name (CN)：這邊要填你的域名 domain.com，它後面本來寫說填個名字就好我就傻傻的填我的英文名字，結果一直失敗..\n生成的CSR文件 csr.csr 就可以整個複製上去。 收到憑證後 通常在取得 SSL 憑證時，您會收到兩個檔案：.crt 憑證檔案和 .ca-bundle（或 .bundle）憑證束檔案。\n.crt 憑證檔案是您的 SSL 證書，它包含您的網站的公開金鑰以及其他相關的證書資訊。\n.ca-bundle（或 .bundle）憑證束檔案是根憑證和中繼憑證的集合。它包含了憑證鏈中的所有憑證，用於驗證您的 SSL 憑證的合法性。憑證鏈包括根憑證（Root Certificate）和中繼憑證（Intermediate Certificate）。根憑證是由受信任的憑證授權中心（Certificate Authority）簽署的，而中繼憑證是由根憑證簽署的其他憑證。\n在設定 Nginx 的 SSL 時，需要將 .crt 憑證檔案和 .ca-bundle（或 .bundle）憑證束檔案合併為一個檔案，形成完整的憑證鏈。\n順序不能錯，要先crt再ca-bundle\ncat domain.crt domain.ca-bundle \u0026gt; server.crt nginx設定 # HTTP 重定向到 HTTPS server { listen 80; server_name lazyvic."},{"id":10,"href":"/Blogs/Java.html","title":"Java","parent":"Code","content":"i am sdf\n","description":"i am sdf"},{"id":11,"href":"/Blogs/LeetCode.html","title":"Leetcode","parent":"Code","content":"i am sdf\n","description":"i am sdf"},{"id":12,"href":"/Blogs/PHP.html","title":"PHP","parent":"Code","content":"i am sdf\n","description":"i am sdf"},{"id":13,"href":"/","title":"Welcome to My Blog","parent":"","content":" Geekdoc is a simple Hugo theme for documentations. It is intentionally designed as a fast and lean theme and may not fit the requirements of complex projects. If a more feature-complete theme is required there are a lot of got alternatives out there.\nFeature overview Clean and simple design Stay focused on exploring the content and don\u0026rsquo;t get overwhelmed by a complex design. Light and mobile-friendly The theme is powered by less than 1 MB and looks impressive on mobile devices as well as on a regular Desktop. Easy customization The look and feel can be easily customized by CSS custom properties (variables), features can be adjusted by Hugo parameters. Zero initial configuration Getting started in minutes. The theme is shipped with a default configuration and works out of the box. Handy shortcodes We included some (hopefully) useful custom shortcodes so you don\u0026rsquo;t have to and can focus on writing amazing docs. Dark mode Powerful dark mode that detects your system preferences or can be controlled by a toggle switch. ","description":"Geekdoc is a simple Hugo theme for documentations. It is intentionally designed as a fast and lean theme and may not fit the requirements of complex projects. If a more feature-complete theme is required there are a lot of got alternatives out there.\nFeature overview Clean and simple design Stay focused on exploring the content and don\u0026rsquo;t get overwhelmed by a complex design. Light and mobile-friendly The theme is powered by less than 1 MB and looks impressive on mobile devices as well as on a regular Desktop."},{"id":14,"href":"/tags.html","title":"Tags","parent":"Welcome to My Blog","content":"","description":""}]