<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tree on Log of Vic</title>
    <link>https://lazyvic.com/tags/tree.html</link>
    <description>Recent content in tree on Log of Vic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 19 Aug 2023 08:25:41 +0800</lastBuildDate><atom:link href="https://lazyvic.com/tags/tree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Convert List To Tree</title>
      <link>https://lazyvic.com/Programming/Languages/Miscellaneous/ConvertListToTree.html</link>
      <pubDate>Sat, 19 Aug 2023 08:25:41 +0800</pubDate>
      
      <guid>https://lazyvic.com/Programming/Languages/Miscellaneous/ConvertListToTree.html</guid>
      <description>Write a programe take string with dilemeter, and write two funtions
input: Save input string into a collection. Output: output appearence rate by givin string class TreeNode { public $header; public $count = 0; public $children = []; public function __construct($header) { $this-&amp;gt;header = $header; } } class TokenCollection { private $tokens = []; private $root; public function __construct() { $this-&amp;gt;root = new TreeNode(&amp;#34;root&amp;#34;); } public function ingest($string) { array_push($this-&amp;gt;tokens, $string); $node = $this-&amp;gt;root; foreach (explode(&amp;#34;:&amp;#34;, $string) as $val) { $isNew = true; // Check if current token has existing child nodes foreach ($node-&amp;gt;children as $existingNode) { if ($existingNode-&amp;gt;header === $val) { $node = $existingNode; // Update the current node to the existing child node $isNew = false; break; } } if ($isNew) { // Create a new child node if the token is new $newNode = new TreeNode($val); $node-&amp;gt;children[] = $newNode; // Add the new child node to the current node&amp;#39;s children $node = $newNode; // Update the current node to the new child node } $node-&amp;gt;count++; // Increment the count for the current node } } public function appearance($prefix) { $matchingCount = 0; $totalCount = count($this-&amp;gt;tokens); // Iterate through stored tokens to count matching tokens foreach ($this-&amp;gt;tokens as $token) { if (strpos($token, $prefix) === 0) { $matchingCount++; } } // Calculate and return the appearance percentage return $totalCount &amp;gt; 0 ?</description>
    </item>
    
  </channel>
</rss>
